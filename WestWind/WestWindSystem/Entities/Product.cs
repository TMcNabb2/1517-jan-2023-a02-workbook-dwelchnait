// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace WestWindSystem.Entities
{
    [Index("CategoryID", Name = "CategoriesProducts")]
    [Index("CategoryID", Name = "CategoryID")]
    [Index("ProductName", Name = "ProductName")]
    [Index("SupplierID", Name = "SupplierID")]
    [Index("SupplierID", Name = "SuppliersProducts")]
    public partial class Product
    {
        public Product()
        {
            ManifestItems = new HashSet<ManifestItem>();
            OrderDetails = new HashSet<OrderDetail>();
        }

        [Key]
        public int ProductID { get; set; }
        [Required(ErrorMessage ="Product name is required.")]
        [StringLength(40,ErrorMessage ="Product name is limited to 40 characters")]
        public string ProductName { get; set; }
        public int SupplierID { get; set; }
        public int CategoryID { get; set; }
        [Required(ErrorMessage = "Quanity per unit is required.")]
        [StringLength(20, ErrorMessage = "Quanity per unit is limited to 20 characters"))]
        public string QuantityPerUnit { get; set; }
        [Range(0,10000,ErrorMessage ="Quantity ordered must be greater 0 and less than 10000")]
        public short? MinimumOrderQuantity { get; set; }
        [Column(TypeName = "money")]
        public decimal UnitPrice { get; set; }
        public int UnitsOnOrder { get; set; }
        public bool Discontinued { get; set; }

        [ForeignKey("CategoryID")]
        [InverseProperty("Products")]
        public virtual Category Category { get; set; }
        [ForeignKey("SupplierID")]
        [InverseProperty("Products")]
        public virtual Supplier Supplier { get; set; }
        [InverseProperty("Product")]
        public virtual ICollection<ManifestItem> ManifestItems { get; set; }
        [InverseProperty("Product")]
        public virtual ICollection<OrderDetail> OrderDetails { get; set; }
    }
}